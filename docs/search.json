[
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "",
    "section": "Overview",
    "text": "Overview\nThis report contains a reproducible pipeline for processing SISVAN microdata on nutritional status monitoring in Brazil (2008–2023). The main goal is to provide a open and reliable workflow for processing these data, supporting research and informed public policy decisions.\n\n\n\n\n\n\nThis pipeline is still under development and may not be fully functional.\nThis warning will be removed once the pipeline is complete."
  },
  {
    "objectID": "index.html#problem",
    "href": "index.html#problem",
    "title": "",
    "section": "Problem",
    "text": "Problem\nThe Food and Nutrition Surveillance System (SISVAN) is a strategic tool for monitoring the nutritional status of the Brazilian population, particularly those served by Brazil’s Unified Health System (SUS). However, despite its broad scope and importance, the anthropometric data recorded in SISVAN often suffer from quality issues that limit their usefulness for rigorous analyses and evidence-based policymaking (Silva et al., 2023).\nMultiple factors contribute to these quality concerns, including the lack of standardized measurement protocols, variability in staff training, inconsistencies in data entry and processing, and incomplete population coverage (Bagni & Barros, 2015; Corsi et al., 2017; Perumal et al., 2020). To assess and improve data quality, several indicators have been proposed and applied, such as population coverage (Mourão et al., 2020; Nascimento et al., 2017), completeness of birth dates and anthropometric measurements (Finaret & Hutchinson, 2018; Nannan et al., 2019), digit preference for age, height, and weight (Bopp & Faeh, 2008; Lyons-Amos & Stones, 2017), the percentage of biologically implausible values (Lawman et al., 2015), and the dispersion and distribution of standardized weight and height measurements (Mei, 2007; Perumal et al., 2020).\nIn light of this, there is a need for an open and reproducible pipeline for processing SISVAN microdata, aiming to identify, correct, or remove problematic records and ensure greater consistency, completeness, and plausibility of the information for use in research and public policy."
  },
  {
    "objectID": "index.html#data-availability",
    "href": "index.html#data-availability",
    "title": "",
    "section": "Data Availability",
    "text": "Data Availability\n\n\n\nThe processed data are available in both csv and rds formats via a dedicated repository on the Open Science Framework (OSF), accessible here. A metadata file is included alongside the validated data. You can also access these files directly from R using the osfr package.\nA backup copy of the raw data is also available in OSF. You can access it here."
  },
  {
    "objectID": "index.html#methods",
    "href": "index.html#methods",
    "title": "",
    "section": "Methods",
    "text": "Methods\nSource of Data\nThe data used in this analysis come from the following sources:\n\nBrazil’s Food and Nutrition Surveillance System (SISVAN), which provides microdata on nutritional status monitoring in Brazil (Sistema de Vigilância Alimentar e Nutricional et al., n.d.).\nThe Brazilian Institute of Geography and Statistics (IBGE), which provides official territorial data for Brazilian municipalities. These data were accessed using the orbis and geobr R packages (Pereira & Goncalves, n.d.; Vartanian, n.d.).\nThe Department of Informatics of the Brazilian Unified Health System (DATASUS) platform, which provides annual population estimates for Brazil by municipality, age, and sex for the period 2000-2024 (Comitê de Gestão de Indicadores et al., n.d.). For practicality and better organization, the DATASUS data used in this pipeline is provided through a separate reproducible pipeline, available here (Vartanian & Carvalho, 2025).\n\nFor technical information about the raw dataset, see the official technical note (in Portuguese).\nData Munging\nThe data munging followed the data science workflow outlined by Wickham et al. (2023), as illustrated in Figure 1. All processes were made using the Quarto publishing system (Allaire et al., n.d.), the R programming language (R Core Team, n.d.) and several R packages.\nThe tidyverse and rOpenSci peer-reviewed package ecosystem and other R packages adherents of the tidy tools manifesto (Wickham, 2023) were prioritized. All processes were made in order to provide result transparency and reproducibility.\n\n\nFigure 1: Data science workflow created by Wickham, Çetinkaya-Runde, and Grolemund.\n\n\nSource: Reproduced from Wickham et al. (2023).\n\n\n\nData Validation\nDifferent validation techniques were used to ensure data quality and reliability:\n\nThe amount of data imported from the raw files were compared to the amount of data returned by SISVAN Online Data Access Tool.\nDuplicates were removed based on distinct combinations of the variables id, age, date (date of the individual’s nutritional assessment), weight, and height.\nThe number of nutritional assessments were compared to the estimated number of children in the population.\n\nSilva et al. (2023) quality indicators were also used for validation. Refer to the article for more details.\nCode Style\nThe Tidyverse code style guide and design principles were followed to ensure consistency and enhance readability.\nReproducibility\nThe pipeline is fully reproducible and can be run again at any time. See the README file in the code repository to learn how to run it."
  },
  {
    "objectID": "index.html#set-the-environment",
    "href": "index.html#set-the-environment",
    "title": "",
    "section": "Set the Environment",
    "text": "Set the Environment\n\nlibrary(brandr)\nlibrary(cli)\nlibrary(dplyr)\nlibrary(fs)\nlibrary(ggplot2)\nlibrary(groomr) # github.com/danielvartan/groomr\nlibrary(here)\nlibrary(httr2)\nlibrary(janitor)\nlibrary(labelled)\nlibrary(lubridate)\nlibrary(orbis) # github.com/danielvartan/orbis\nlibrary(osfr)\nlibrary(pal) # gitlab.com/rpkg.dev/pal\nlibrary(plotr) # github.com/danielvartan/plotr\nlibrary(readr)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(utils)\nlibrary(vroom)"
  },
  {
    "objectID": "index.html#set-the-initial-variables",
    "href": "index.html#set-the-initial-variables",
    "title": "",
    "section": "Set the Initial Variables",
    "text": "Set the Initial Variables\n\nyear &lt;- 2017\n\n\nage_limits &lt;- c(0, 4)\n\n\n\n\n\n\n\nClick here to access the microdata data dictionary (in Portuguese).\n\n\n\n\ncol_selection &lt;- c(\n  \"CO_PESSOA_SISVAN\",\n  \"CO_MUNICIPIO_IBGE\",\n  \"DT_ACOMPANHAMENTO\",\n  \"SG_SEXO\",\n  \"NU_IDADE_ANO\",\n  \"NU_PESO\",\n  \"NU_ALTURA\"\n)"
  },
  {
    "objectID": "index.html#download-the-data",
    "href": "index.html#download-the-data",
    "title": "",
    "section": "Download the Data",
    "text": "Download the Data\n\n\n\n\n\n\nSISVAN microdata files are very large. For practical reasons, some code chunks have eval: false set to prevent downloading the data each time the report is rendered. When running the pipeline in a loop or for full automation, remove these lines to enable automatic downloading.\n\n\n\n\nCodeif (!dir.exists(here(\"data\"))) dir.create(\"data\")\n\n\n\nraw_file_pattern &lt;- paste0(\"raw-\", year)\n\n\nfile &lt;- here(\"data\", paste0(raw_file_pattern, \".zip\"))\n\npaste0(\n    \"https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SISVAN/\",\n    \"estado_nutricional/sisvan_estado_nutricional_\",\n    year,\n    \".zip\"\n  ) |&gt;\n  request() |&gt;\n  req_progress() |&gt;\n  req_perform(file)"
  },
  {
    "objectID": "index.html#unzip-the-data",
    "href": "index.html#unzip-the-data",
    "title": "",
    "section": "Unzip the Data",
    "text": "Unzip the Data\n\nCodefile &lt;-\n  file |&gt;\n  unzip(exdir = here(\"data\"), overwrite = TRUE)\n\n\n\nCodefile &lt;-\n  file |&gt;\n  file_move(here(\"data\", paste0(raw_file_pattern, \".csv\")))\n\n\n\nCodefile_delete(here(\"data\", paste0(raw_file_pattern, \".zip\")))"
  },
  {
    "objectID": "index.html#check-data-dimensions",
    "href": "index.html#check-data-dimensions",
    "title": "",
    "section": "Check Data Dimensions",
    "text": "Check Data Dimensions\n\nfile |&gt; peek_csv_file(delim = \";\", skip = 0, has_header = TRUE)\n#&gt; The file has 34 columns, 28,537,529 rows, and 970,275,986 cells."
  },
  {
    "objectID": "index.html#read-and-filter-the-data",
    "href": "index.html#read-and-filter-the-data",
    "title": "",
    "section": "Read and Filter the Data",
    "text": "Read and Filter the Data\n\n\n\n\n\n\nWe use the vroom R package together with the AWK programming language to efficiently handle large datasets and mitigate memory issues. This approach allows the pipeline to run locally on most machines, though we recommend a minimum of 12 GB of RAM for optimal performance. Alternatively, the pipeline can also be executed on cloud platforms such as Google Colab or RStudio Cloud.\n\n\n\n\ncol_names &lt;- c(\n  \"CO_ACOMPANHAMENTO\",\n  \"CO_PESSOA_SISVAN\",\n  \"ST_PARTICIPA_ANDI\",\n  \"CO_MUNICIPIO_IBGE\",\n  \"SG_UF\",\n  \"NO_MUNICIPIO\",\n  \"CO_CNES\",\n  \"NU_IDADE_ANO\",\n  \"NU_FASE_VIDA\",\n  \"DS_FASE_VIDA\",\n  \"SG_SEXO\",\n  \"CO_RACA_COR\",\n  \"DS_RACA_COR\",\n  \"CO_POVO_COMUNIDADE\",\n  \"DS_POVO_COMUNIDADE\",\n  \"CO_ESCOLARIDADE\",\n  \"DS_ESCOLARIDADE\",\n  \"DT_ACOMPANHAMENTO\",\n  \"NU_COMPETENCIA\",\n  \"NU_PESO\",\n  \"NU_ALTURA\",\n  \"DS_IMC\",\n  \"DS_IMC_PRE_GESTACIONAL\",\n  \"PESO X IDADE\",\n  \"PESO X ALTURA\",\n  \"CRI. ALTURA X IDADE\",\n  \"CRI. IMC X IDADE\",\n  \"ADO. ALTURA X IDADE\",\n  \"ADO. IMC X IDADE\",\n  \"CO_ESTADO_NUTRI_ADULTO\",\n  \"CO_ESTADO_NUTRI_IDOSO\",\n  \"CO_ESTADO_NUTRI_IMC_SEMGEST\",\n  \"CO_SISTEMA_ORIGEM_ACOMP\",\n  \"SISTEMA_ORIGEM_ACOMP\"\n)\n\n\nschema &lt;- cols(\n  CO_ACOMPANHAMENTO = col_character(),\n  CO_PESSOA_SISVAN = col_character(),\n  ST_PARTICIPA_ANDI = col_character(),\n  CO_MUNICIPIO_IBGE = col_integer(),\n  SG_UF = col_factor(),\n  NO_MUNICIPIO = col_character(), # ? col_factor()\n  CO_CNES = col_integer(),\n  NU_IDADE_ANO = col_integer(),\n  NU_FASE_VIDA = col_character(), # decimal mark = \".\" (double)\n  DS_FASE_VIDA = col_factor(),\n  SG_SEXO = col_factor(),\n  CO_RACA_COR = col_character(),\n  DS_RACA_COR = col_factor(),\n  CO_POVO_COMUNIDADE = col_integer(),\n  DS_POVO_COMUNIDADE = col_factor(),\n  CO_ESCOLARIDADE = col_character(),\n  DS_ESCOLARIDADE = col_factor(),\n  DT_ACOMPANHAMENTO = col_date(),\n  NU_COMPETENCIA = col_integer(),\n  NU_PESO = col_double(),\n  NU_ALTURA = col_integer(),\n  DS_IMC = col_double(),\n  DS_IMC_PRE_GESTACIONAL = col_character(), # decimal mark = \".\" (double)\n  \"PESO X IDADE\" = col_factor(),\n  \"PESO X ALTURA\" = col_factor(),\n  \"CRI. ALTURA X IDADE\" = col_factor(),\n  \"CRI. IMC X IDADE\" = col_factor(),\n  \"ADO. ALTURA X IDADE\" = col_factor(),\n  \"ADO. IMC X IDADE\" = col_factor(),\n  CO_ESTADO_NUTRI_ADULTO = col_factor(),\n  CO_ESTADO_NUTRI_IDOSO = col_factor(),\n  CO_ESTADO_NUTRI_IMC_SEMGEST = col_factor(),\n  CO_SISTEMA_ORIGEM_ACOMP = col_integer(),\n  SISTEMA_ORIGEM_ACOMP = col_factor()\n)\n\n\n\n\n\n\n\nYou may see warning messages about failed parsing. These warnings are expected due to minor inconsistencies in the SISVAN raw data and do not affect the overall analysis.\n\n\n\n\ndata &lt;-\n  vroom(\n     # Uses `pipe()` and `awk` to filter data to avoid loading the\n     # entire file into memory.\n    file = pipe(\n      paste(\n        \"awk -F ';' '{ if (\",\n        \"($8 &gt;= \", age_limits[1], \") && ($8 &lt;= \", age_limits[2], \")\",\n        \") { print } }'\",\n        file\n      )\n    ),\n    delim = \";\",\n    col_names = col_names,\n    col_types = schema,\n    col_select = all_of(col_selection),\n    id = NULL,\n    skip = 0,\n    n_max = Inf,\n    na = c(\"\", \"NA\"),\n    quote = \"\\\"\",\n    comment = \"\",\n    skip_empty_rows = TRUE,\n    trim_ws = TRUE,\n    escape_double = TRUE,\n    escape_backslash = FALSE,\n    locale = locale(\n      date_names = \"pt\",\n      date_format = \"%d/%m/%Y\",\n      time_format = \"%H:%M:%S\",\n      decimal_mark = \",\",\n      grouping_mark = \".\",\n      tz = \"America/Sao_Paulo\",\n      encoding = guess_encoding(file)$encoding[1]\n    ),\n    guess_max = 100,\n    altrep = TRUE,\n    num_threads = vroom:::vroom_threads(),\n    progress = vroom_progress(),\n    show_col_types = NULL,\n    .name_repair = \"unique\"\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,775,907\n#&gt; Columns: 7\n#&gt; $ CO_PESSOA_SISVAN  &lt;chr&gt; \"B053B4FAD12CF2F95F1C251702606DCCD870A406\", \"CF43…\n#&gt; $ CO_MUNICIPIO_IBGE &lt;int&gt; 230670, 420270, 520520, 251445, 231380, 230710, 2…\n#&gt; $ DT_ACOMPANHAMENTO &lt;date&gt; 2017-01-23, 2017-01-11, 2017-01-02, 2017-01-10, …\n#&gt; $ SG_SEXO           &lt;fct&gt; M, M, F, F, F, F, F, F, M, M, F, F, M, F, F, F, F…\n#&gt; $ NU_IDADE_ANO      &lt;int&gt; 1, 3, 3, 0, 4, 0, 0, 1, 1, 0, 0, 4, 1, 1, 0, 0, 0…\n#&gt; $ NU_PESO           &lt;dbl&gt; 11.600, 17.200, 14.000, 12.200, 16.000, 6.400, 8.…\n#&gt; $ NU_ALTURA         &lt;int&gt; 77, 90, 97, 73, 100, 60, 63, 73, 88, 66, 67, 108,…"
  },
  {
    "objectID": "index.html#rename-the-data",
    "href": "index.html#rename-the-data",
    "title": "",
    "section": "Rename the Data",
    "text": "Rename the Data\n\ndata &lt;-\n  data |&gt;\n  clean_names() |&gt;\n  rename(\n    id = co_pessoa_sisvan,\n    municipality_code = co_municipio_ibge,\n    date = dt_acompanhamento,\n    sex = sg_sexo,\n    age = nu_idade_ano,\n    weight = nu_peso,\n    height = nu_altura\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,775,907\n#&gt; Columns: 7\n#&gt; $ id                &lt;chr&gt; \"B053B4FAD12CF2F95F1C251702606DCCD870A406\", \"CF43…\n#&gt; $ municipality_code &lt;int&gt; 230670, 420270, 520520, 251445, 231380, 230710, 2…\n#&gt; $ date              &lt;date&gt; 2017-01-23, 2017-01-11, 2017-01-02, 2017-01-10, …\n#&gt; $ sex               &lt;fct&gt; M, M, F, F, F, F, F, F, M, M, F, F, M, F, F, F, F…\n#&gt; $ age               &lt;int&gt; 1, 3, 3, 0, 4, 0, 0, 1, 1, 0, 0, 4, 1, 1, 0, 0, 0…\n#&gt; $ weight            &lt;dbl&gt; 11.600, 17.200, 14.000, 12.200, 16.000, 6.400, 8.…\n#&gt; $ height            &lt;int&gt; 77, 90, 97, 73, 100, 60, 63, 73, 88, 66, 67, 108,…"
  },
  {
    "objectID": "index.html#tidy-the-data",
    "href": "index.html#tidy-the-data",
    "title": "",
    "section": "Tidy the Data",
    "text": "Tidy the Data\n\ndata &lt;-\n  data |&gt;\n  mutate(\n    sex =\n      sex |&gt;\n      case_match(\n        \"F\" ~ \"female\",\n        \"M\" ~ \"male\"\n      ) |&gt;\n      factor(\n        levels = c(\"male\", \"female\"),\n        ordered = FALSE\n      )\n  ) |&gt;\n  relocate(id, date)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,775,907\n#&gt; Columns: 7\n#&gt; $ id                &lt;chr&gt; \"B053B4FAD12CF2F95F1C251702606DCCD870A406\", \"CF43…\n#&gt; $ date              &lt;date&gt; 2017-01-23, 2017-01-11, 2017-01-02, 2017-01-10, …\n#&gt; $ municipality_code &lt;int&gt; 230670, 420270, 520520, 251445, 231380, 230710, 2…\n#&gt; $ sex               &lt;fct&gt; male, male, female, female, female, female, femal…\n#&gt; $ age               &lt;int&gt; 1, 3, 3, 0, 4, 0, 0, 1, 1, 0, 0, 4, 1, 1, 0, 0, 0…\n#&gt; $ weight            &lt;dbl&gt; 11.600, 17.200, 14.000, 12.200, 16.000, 6.400, 8.…\n#&gt; $ height            &lt;int&gt; 77, 90, 97, 73, 100, 60, 63, 73, 88, 66, 67, 108,…"
  },
  {
    "objectID": "index.html#transform-the-data",
    "href": "index.html#transform-the-data",
    "title": "",
    "section": "Transform the Data",
    "text": "Transform the Data\nAdd State and Region Data\n\n\n\n\n\n\nThe orbis R package retrieves state and region information using the geobr package, developed by the Brazilian Institute for Applied Economic Research (IPEA). The geobr package, in turn, is based on official data from the Brazilian Institute of Geography and Statistics (IBGE).\n\n\n\n\nbrazil_municipalities &lt;- get_brazil_municipality(\n  year = get_closest_geobr_year(year, type = \"municipality\")\n)\n#&gt; Loading required namespace: sf\n#&gt; Using year/date 2017\n\n\ndata &lt;-\n  data |&gt;\n  left_join(\n    brazil_municipalities |&gt;\n      mutate(\n        municipality_code =\n          municipality_code |&gt;\n          str_sub(end = -2) |&gt;\n          as.integer()\n      ),\n    by = \"municipality_code\"\n  ) |&gt;\n  relocate(\n    id,\n    date,\n    region_code,\n    region,\n    state_code,\n    state,\n    federal_unit,\n    municipality_code,\n    municipality\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,775,907\n#&gt; Columns: 15\n#&gt; $ id                &lt;chr&gt; \"B053B4FAD12CF2F95F1C251702606DCCD870A406\", \"CF43…\n#&gt; $ date              &lt;date&gt; 2017-01-23, 2017-01-11, 2017-01-02, 2017-01-10, …\n#&gt; $ region_code       &lt;int&gt; 2, 4, 5, 2, 2, 2, 2, 3, 2, 2, 4, 3, 1, 1, 3, 2, 4…\n#&gt; $ region            &lt;chr&gt; \"Northeast\", \"South\", \"Central-West\", \"Northeast\"…\n#&gt; $ state_code        &lt;int&gt; 23, 42, 52, 25, 23, 23, 29, 31, 23, 26, 43, 35, 1…\n#&gt; $ state             &lt;chr&gt; \"Ceará\", \"Santa Catarina\", \"Goiás\", \"Paraíba\", \"C…\n#&gt; $ federal_unit      &lt;chr&gt; \"CE\", \"SC\", \"GO\", \"PB\", \"CE\", \"CE\", \"BA\", \"MG\", \"…\n#&gt; $ municipality_code &lt;int&gt; 230670, 420270, 520520, 251445, 231380, 230710, 2…\n#&gt; $ municipality      &lt;chr&gt; \"Jaguaretama\", \"Botuverá\", \"Caturaí\", \"São José d…\n#&gt; $ sex               &lt;fct&gt; male, male, female, female, female, female, femal…\n#&gt; $ age               &lt;int&gt; 1, 3, 3, 0, 4, 0, 0, 1, 1, 0, 0, 4, 1, 1, 0, 0, 0…\n#&gt; $ weight            &lt;dbl&gt; 11.600, 17.200, 14.000, 12.200, 16.000, 6.400, 8.…\n#&gt; $ height            &lt;int&gt; 77, 90, 97, 73, 100, 60, 63, 73, 88, 66, 67, 108,…\n#&gt; $ latitude          &lt;dbl&gt; -5.610889563, -27.202106861, -16.446761588, -7.24…\n#&gt; $ longitude         &lt;dbl&gt; -38.76252630, -49.07848436, -49.50285300, -35.377…"
  },
  {
    "objectID": "index.html#validate-the-data",
    "href": "index.html#validate-the-data",
    "title": "",
    "section": "Validate the Data",
    "text": "Validate the Data\nRemove Duplicates\n\ndata &lt;-\n  data |&gt;\n  arrange(desc(date)) |&gt;\n  distinct(\n    id,\n    age,\n    date,\n    weight,\n    height,\n    .keep_all = TRUE\n  )\n#&gt; Warning: One or more parsing issues, call `problems()` on your data frame for\n#&gt; details, e.g.:\n#&gt;   dat &lt;- vroom(...)\n#&gt;   problems(dat)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,770,414\n#&gt; Columns: 15\n#&gt; $ id                &lt;chr&gt; \"B1C98CBB3CB83C75B08E2F62056EB10A68DBEBA4\", \"5B1A…\n#&gt; $ date              &lt;date&gt; 2017-12-31, 2017-12-31, 2017-12-31, 2017-12-31, …\n#&gt; $ region_code       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#&gt; $ region            &lt;chr&gt; \"Central-West\", \"Central-West\", \"Central-West\", \"…\n#&gt; $ state_code        &lt;int&gt; 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5…\n#&gt; $ state             &lt;chr&gt; \"Goiás\", \"Goiás\", \"Goiás\", \"Goiás\", \"Goiás\", \"Goi…\n#&gt; $ federal_unit      &lt;chr&gt; \"GO\", \"GO\", \"GO\", \"GO\", \"GO\", \"GO\", \"GO\", \"GO\", \"…\n#&gt; $ municipality_code &lt;int&gt; 522020, 522045, 522020, 521250, 522020, 522020, 5…\n#&gt; $ municipality      &lt;chr&gt; \"São Miguel do Araguaia\", \"Senador Canedo\", \"São …\n#&gt; $ sex               &lt;fct&gt; female, male, female, male, female, male, female,…\n#&gt; $ age               &lt;int&gt; 3, 4, 2, 2, 2, 3, 3, 1, 2, 4, 2, 3, 2, 4, 3, 4, 4…\n#&gt; $ weight            &lt;dbl&gt; 17, NA, NA, NA, 14, 19, 16, 12, 14, 21, NA, 17, 1…\n#&gt; $ height            &lt;int&gt; 94, 107, 85, 81, 89, 96, 95, 80, 87, 127, 93, 93,…\n#&gt; $ latitude          &lt;dbl&gt; -13.27602434, -16.71857532, -13.27602434, -16.258…\n#&gt; $ longitude         &lt;dbl&gt; -50.16383827, -49.08796683, -50.16383827, -47.955…"
  },
  {
    "objectID": "index.html#arrange-the-data",
    "href": "index.html#arrange-the-data",
    "title": "",
    "section": "Arrange the Data",
    "text": "Arrange the Data\n\ndata &lt;-\n  data |&gt;\n  arrange(\n    region_code,\n    state_code,\n    municipality_code,\n    date,\n    sex,\n    age,\n    weight,\n    height\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,770,414\n#&gt; Columns: 15\n#&gt; $ id                &lt;chr&gt; \"263E905B0395FF94BE2D97E92983F83D0F4D01E6\", \"B812…\n#&gt; $ date              &lt;date&gt; 2017-01-04, 2017-01-05, 2017-01-06, 2017-01-09, …\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ region            &lt;chr&gt; \"North\", \"North\", \"North\", \"North\", \"North\", \"Nor…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ state             &lt;chr&gt; \"Rondônia\", \"Rondônia\", \"Rondônia\", \"Rondônia\", \"…\n#&gt; $ federal_unit      &lt;chr&gt; \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"…\n#&gt; $ municipality_code &lt;int&gt; 110001, 110001, 110001, 110001, 110001, 110001, 1…\n#&gt; $ municipality      &lt;chr&gt; \"Alta Floresta D'Oeste\", \"Alta Floresta D'Oeste\",…\n#&gt; $ sex               &lt;fct&gt; female, male, female, male, male, female, male, m…\n#&gt; $ age               &lt;int&gt; 1, 1, 4, 2, 0, 3, 1, 2, 1, 4, 0, 2, 0, 0, 4, 0, 0…\n#&gt; $ weight            &lt;dbl&gt; 9.000, 9.700, 14.000, 12.700, 6.600, 13.800, 10.0…\n#&gt; $ height            &lt;int&gt; 81, 75, 95, 89, 58, 98, 83, 80, 76, 111, 53, 95, …\n#&gt; $ latitude          &lt;dbl&gt; -11.9355403, -11.9355403, -11.9355403, -11.935540…\n#&gt; $ longitude         &lt;dbl&gt; -61.9998239, -61.9998239, -61.9998239, -61.999823…"
  },
  {
    "objectID": "index.html#data-dictionary",
    "href": "index.html#data-dictionary",
    "title": "",
    "section": "Data Dictionary",
    "text": "Data Dictionary\n\nCodemetadata &lt;-\n  data |&gt;\n  `var_label&lt;-`(\n    list(\n      id = \"Unique identifier of the individual\",\n      date = \"Date of the individual's nutritional assessment\",\n      region_code = \"IBGE region code\",\n      region = \"Region name\",\n      state_code = \"IBGE state code\",\n      state = \"State name\",\n      federal_unit = \"Federal unit name\",\n      municipality_code = \"IBGE municipality code\",\n      municipality = \"Municipality name\",\n      sex = \"Sex of the individual\",\n      age = \"Age of the individual in years\",\n      weight = \"Weight of the individual in kilograms\",\n      height = \"Height of the individual in centimeters\"\n    )\n  ) |&gt;\n  generate_dictionary(details = \"full\") |&gt;\n  convert_list_columns_to_character()\n\n\n\nCodemetadata\n\n\n  \n\n\n\n\nCodedata"
  },
  {
    "objectID": "index.html#save-the-valid-data",
    "href": "index.html#save-the-valid-data",
    "title": "",
    "section": "Save the Valid Data",
    "text": "Save the Valid Data\nData\n\nCodevalid_file_pattern &lt;- paste0(\n  \"valid-\",\n  year,\n  \"-age-\",\n  age_limits[1],\n  \"-\",\n  age_limits[2]\n)\n\n\n\nCodedata |&gt;\n  write_csv(\n    here(\"data\", paste0(valid_file_pattern, \".csv\"))\n  )\n\n\n\nCodedata |&gt;\n  write_rds(\n    here(\"data\", paste0(valid_file_pattern, \".rds\"))\n  )\n\n\nMetadata\n\nCodemetadata_file_pattern &lt;- paste0(\n  \"metadata-\",\n  year,\n  \"-age-\",\n  age_limits[1],\n  \"-\",\n  age_limits[2]\n)\n\n\n\nCodemetadata |&gt;\n  write_csv(\n    here(\"data\", paste0(metadata_file_pattern, \".csv\"))\n  )\n\n\n\nCodemetadata |&gt;\n  write_rds(\n    here(\"data\", paste0(metadata_file_pattern, \".rds\"))\n  )"
  },
  {
    "objectID": "index.html#check-the-relative-coverage",
    "href": "index.html#check-the-relative-coverage",
    "title": "",
    "section": "Check the Relative Coverage",
    "text": "Check the Relative Coverage\nTransform the Data\nRemove Duplicates by Year\n\n\n\n\n\n\nAs described in Silva et al. (2023, p. 4), to calculate SISVAN’s total resident population coverage, only the most recent record for each individual within each year is retained for analysis.\n\n\n\n\ndata &lt;-\n  data |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    arrange(desc(date)) |&gt;\n    distinct(id, year, .keep_all = TRUE) |&gt;\n    relocate(year, .after = date)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 4,622,727\n#&gt; Columns: 16\n#&gt; $ id                &lt;chr&gt; \"1B7842AF30A5899C2B6D82688E95EDCD96355BA1\", \"9A35…\n#&gt; $ date              &lt;date&gt; 2017-12-31, 2017-12-31, 2017-12-31, 2017-12-31, …\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ region            &lt;chr&gt; \"North\", \"North\", \"North\", \"North\", \"North\", \"Nor…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ state             &lt;chr&gt; \"Rondônia\", \"Rondônia\", \"Rondônia\", \"Rondônia\", \"…\n#&gt; $ federal_unit      &lt;chr&gt; \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"…\n#&gt; $ municipality_code &lt;int&gt; 110002, 110002, 110002, 110002, 110002, 110002, 1…\n#&gt; $ municipality      &lt;chr&gt; \"Ariquemes\", \"Ariquemes\", \"Ariquemes\", \"Ariquemes…\n#&gt; $ sex               &lt;fct&gt; male, male, male, male, male, male, male, male, m…\n#&gt; $ age               &lt;int&gt; 0, 1, 1, 2, 2, 2, 2, 3, 4, 1, 2, 3, 4, 1, 1, 1, 2…\n#&gt; $ weight            &lt;dbl&gt; 7, 12, 13, 12, 13, NA, NA, 17, 18, NA, NA, 19, NA…\n#&gt; $ height            &lt;int&gt; 63, 82, 85, 90, 90, 87, 88, 117, 107, 61, 96, 107…\n#&gt; $ latitude          &lt;dbl&gt; -9.908462867, -9.908462867, -9.908462867, -9.9084…\n#&gt; $ longitude         &lt;dbl&gt; -63.03326928, -63.03326928, -63.03326928, -63.033…\n\nSummarize the Data by Year\n\ndata &lt;-\n  data |&gt;\n    summarize(\n      coverage = n(),\n      mean_age = age |&gt; mean(na.rm = TRUE),\n      mean_weight = weight |&gt; mean(na.rm = TRUE),\n      mean_height = height |&gt; mean(na.rm = TRUE),\n      .by = c(\n        \"year\",\n        \"region_code\",\n        \"state_code\",\n        \"municipality_code\"\n      )\n    )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 5,570\n#&gt; Columns: 8\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 1…\n#&gt; $ municipality_code &lt;int&gt; 110002, 110005, 110025, 110100, 120025, 120040, 1…\n#&gt; $ coverage          &lt;int&gt; 1577, 622, 887, 334, 557, 7291, 995, 3741, 2172, …\n#&gt; $ mean_age          &lt;dbl&gt; 2.581483830, 2.223472669, 2.278466742, 2.46107784…\n#&gt; $ mean_weight       &lt;dbl&gt; 15.17615741, 13.98031309, 14.23404969, 14.7764350…\n#&gt; $ mean_height       &lt;dbl&gt; 93.11921370, 91.22508039, 91.10496614, 93.9251497…\n\nAdd Population Estimates\n\n\n\n\n\n\nAs described in the Methods section, the population estimates were obtained from the DATASUS platform, which provides annual data by municipality, age, and sex for Brazil from 2000 to 2024 (Comitê de Gestão de Indicadores et al., n.d.).\nTo ensure reproducibility and organization, the DATASUS data used in this pipeline are processed and validated through a separate reproducible pipeline, available here (Vartanian & Carvalho, 2025). The validated datasets are downloaded directly from OSF. For further details, refer to the linked pipeline.\n\n\n\n\ndatasus_file_pattern &lt;- paste0(\"datasus-pop-estimates-\", year)\n\n\ndatasus_file &lt;- here(\"data\", paste0(datasus_file_pattern, \".rds\"))\n\nif (!checkmate::test_file_exists(datasus_file)) {\n  osf_id &lt;-\n    paste0(\"https://osf.io/\", \"h3pyd\") |&gt;\n    osf_retrieve_node() |&gt;\n    osf_ls_files(\n      type = \"file\",\n      pattern = paste0(\"valid-\", year, \".rds\")\n    )\n\n  osf_download(\n    x = osf_id,\n    path = tempdir(),\n    conflicts = \"overwrite\"\n  ) |&gt;\n    pull(local_path) |&gt;\n    file_move(datasus_file)\n}\n\npop_estimates &lt;- datasus_file |&gt; read_rds()\n\n\ndata &lt;-\n  pop_estimates |&gt;\n  filter(between(age, age_limits[1], age_limits[2])) |&gt;\n  summarize(\n    n = n |&gt; sum(na.rm = TRUE),\n    .by = c(\n      \"year\",\n      \"region_code\",\n      \"state_code\",\n      \"municipality_code\"\n    )\n  ) |&gt;\n  mutate(\n    municipality_code =\n      municipality_code |&gt;\n      str_sub(end = -2) |&gt;\n      as.integer()\n  ) |&gt;\n  right_join(\n    data,\n    by = c(\n      \"year\",\n      \"region_code\",\n      \"state_code\",\n      \"municipality_code\"\n    )\n  ) |&gt;\n  rename(population = n) |&gt;\n  relocate(population, .before = coverage)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 5,570\n#&gt; Columns: 9\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ municipality_code &lt;int&gt; 110001, 110002, 110003, 110004, 110005, 110006, 1…\n#&gt; $ population        &lt;int&gt; 1808, 8154, 426, 6551, 1258, 1242, 604, 1353, 250…\n#&gt; $ coverage          &lt;int&gt; 734, 1577, 94, 1334, 622, 374, 223, 584, 702, 107…\n#&gt; $ mean_age          &lt;dbl&gt; 2.179836512, 2.581483830, 2.053191489, 2.11544227…\n#&gt; $ mean_weight       &lt;dbl&gt; 13.63854669, 15.17615741, 14.22727273, 13.3930077…\n#&gt; $ mean_height       &lt;dbl&gt; 90.91256831, 93.11921370, 91.26595745, 89.4924698…\n\nValidate the Data\n\n\n\n\n\n\nThe population value used here is an estimate. If the SISVAN coverage for a municipality exceeds the estimated population, the population value is adjusted to match the coverage.\nNote: At this stage, only the most recent record for each individual is retained.\n\n\n\n\ndata &lt;-\n  data |&gt;\n  mutate(\n    population = case_when(\n      coverage &gt; population ~ coverage,\n      TRUE ~ population\n    )\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 5,570\n#&gt; Columns: 9\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ municipality_code &lt;int&gt; 110001, 110002, 110003, 110004, 110005, 110006, 1…\n#&gt; $ population        &lt;int&gt; 1808, 8154, 426, 6551, 1258, 1242, 604, 1353, 250…\n#&gt; $ coverage          &lt;int&gt; 734, 1577, 94, 1334, 622, 374, 223, 584, 702, 107…\n#&gt; $ mean_age          &lt;dbl&gt; 2.179836512, 2.581483830, 2.053191489, 2.11544227…\n#&gt; $ mean_weight       &lt;dbl&gt; 13.63854669, 15.17615741, 14.22727273, 13.3930077…\n#&gt; $ mean_height       &lt;dbl&gt; 90.91256831, 93.11921370, 91.26595745, 89.4924698…\n\nCompute Relative Coverage\n\ndata &lt;-\n  data |&gt;\n  mutate(coverage_per = (coverage / population) * 100) |&gt;\n  relocate(coverage_per, .after = coverage)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 5,570\n#&gt; Columns: 10\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ municipality_code &lt;int&gt; 110001, 110002, 110003, 110004, 110005, 110006, 1…\n#&gt; $ population        &lt;int&gt; 1808, 8154, 426, 6551, 1258, 1242, 604, 1353, 250…\n#&gt; $ coverage          &lt;int&gt; 734, 1577, 94, 1334, 622, 374, 223, 584, 702, 107…\n#&gt; $ coverage_per      &lt;dbl&gt; 40.597345133, 19.340201128, 22.065727700, 20.3633…\n#&gt; $ mean_age          &lt;dbl&gt; 2.179836512, 2.581483830, 2.053191489, 2.11544227…\n#&gt; $ mean_weight       &lt;dbl&gt; 13.63854669, 15.17615741, 14.22727273, 13.3930077…\n#&gt; $ mean_height       &lt;dbl&gt; 90.91256831, 93.11921370, 91.26595745, 89.4924698…\n\nArrange the Data\n\ndata &lt;-\n  data |&gt;\n  arrange(\n    year,\n    region_code,\n    state_code,\n    municipality_code\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 5,570\n#&gt; Columns: 10\n#&gt; $ year              &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2…\n#&gt; $ region_code       &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ state_code        &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1…\n#&gt; $ municipality_code &lt;int&gt; 110001, 110002, 110003, 110004, 110005, 110006, 1…\n#&gt; $ population        &lt;int&gt; 1808, 8154, 426, 6551, 1258, 1242, 604, 1353, 250…\n#&gt; $ coverage          &lt;int&gt; 734, 1577, 94, 1334, 622, 374, 223, 584, 702, 107…\n#&gt; $ coverage_per      &lt;dbl&gt; 40.597345133, 19.340201128, 22.065727700, 20.3633…\n#&gt; $ mean_age          &lt;dbl&gt; 2.179836512, 2.581483830, 2.053191489, 2.11544227…\n#&gt; $ mean_weight       &lt;dbl&gt; 13.63854669, 15.17615741, 14.22727273, 13.3930077…\n#&gt; $ mean_height       &lt;dbl&gt; 90.91256831, 93.11921370, 91.26595745, 89.4924698…\n\nCheck Relative Coverage by Region\n\n\n\n\n\n\nThe coverage observed here is slightly lower than that reported in Silva et al. (2023, Table 2). This difference may be explained by the use of different data sources (Fundação Oswaldo Cruz (Fiocruz) vs. OpenDataSUS).\n\n\n\nCodedata |&gt;\n  mutate(region = orbis::get_brazil_region(region_code)) |&gt;\n  summarize(\n    population = population |&gt; sum(na.rm = TRUE),\n    coverage = coverage |&gt; sum(na.rm = TRUE),\n    .by = \"region\"\n  ) |&gt;\n  slice(c(1, 2, 5, 3, 4)) |&gt;\n  mutate(coverage_per = (coverage / population) * 100) |&gt;\n  rename(\n    Region = region,\n    Population = population,\n    `SISVAN coverage` = coverage,\n    `SISVAN coverage (%)` = coverage_per\n  ) |&gt;\n  pipe_table() |&gt;\n  cat_lines()\n\n\n\n\n\n\n\n\nRegion\nPopulation\nSISVAN coverage\nSISVAN coverage (%)\n\n\n\nNorth\n1592792\n624150\n39.18590751\n\n\nNortheast\n4107294\n1813679\n44.15751587\n\n\nCentral-West\n1208858\n268745\n22.23131253\n\n\nSoutheast\n5767592\n1336352\n23.17001619\n\n\nSouth\n1975068\n579801\n29.35600192\n\n\nChecking Relative Coverage by State\nCodedata |&gt;\n  mutate(state = orbis::get_brazil_state(state_code)) |&gt;\n  summarize(\n    population = population |&gt; sum(na.rm = TRUE),\n    coverage = coverage |&gt; sum(na.rm = TRUE),\n    .by = \"state\"\n  ) |&gt;\n  arrange(state) |&gt;\n  mutate(coverage_per = (coverage / population) * 100) |&gt;\n  rename(\n    State = state,\n    Population = population,\n    `SISVAN coverage` = coverage,\n    `SISVAN coverage (%)` = coverage_per\n  ) |&gt;\n  pipe_table() |&gt;\n  cat_lines()\n\n\n\n\n\n\n\n\nState\nPopulation\nSISVAN coverage\nSISVAN coverage (%)\n\n\n\nAcre\n81517\n36178\n44.380926678\n\n\nAlagoas\n253571\n113343\n44.698723435\n\n\nAmapá\n79072\n20820\n26.330433023\n\n\nAmazonas\n403287\n165140\n40.948505655\n\n\nBahia\n1012762\n444864\n43.925818702\n\n\nCeará\n645357\n281507\n43.620352766\n\n\nDistrito Federal\n218010\n18757\n8.603733774\n\n\nEspírito Santo\n277541\n61507\n22.161410386\n\n\nGoiás\n491920\n103909\n21.123150106\n\n\nMaranhão\n578369\n283802\n49.069365751\n\n\nMato Grosso\n280532\n79026\n28.170048337\n\n\nMato Grosso do Sul\n218396\n67053\n30.702485394\n\n\nMinas Gerais\n1309142\n620924\n47.429843363\n\n\nParaná\n786664\n253352\n32.205871884\n\n\nParaíba\n285820\n150132\n52.526765097\n\n\nPará\n710233\n290899\n40.958248913\n\n\nPernambuco\n692218\n259659\n37.511159779\n\n\nPiauí\n234935\n125698\n53.503309426\n\n\nRio Grande do Norte\n237059\n84896\n35.812181778\n\n\nRio Grande do Sul\n707754\n177919\n25.138536836\n\n\nRio de Janeiro\n1122656\n181772\n16.191246473\n\n\nRondônia\n135254\n33899\n25.063214397\n\n\nRoraima\n59647\n16842\n28.236122521\n\n\nSanta Catarina\n480650\n148530\n30.901903672\n\n\nSergipe\n167203\n69778\n41.732504800\n\n\nSão Paulo\n3058253\n472149\n15.438519965\n\n\nTocantins\n123782\n60372\n48.772842578"
  },
  {
    "objectID": "index.html#visualize-the-relative-coverage",
    "href": "index.html#visualize-the-relative-coverage",
    "title": "",
    "section": "Visualize the Relative Coverage",
    "text": "Visualize the Relative Coverage\n\nCodebrand_div_palette &lt;- function(x) {\n  brandr:::make_color_ramp(\n    n_prop = x,\n    colors = c(\n      get_brand_color(\"dark-red\"),\n      # get_brand_color(\"white\"),\n      get_brand_color_mix(\n        position = 950,\n        color_1 = \"dark-red\",\n        color_2 = \"dark-red-triadic-blue\",\n        alpha = 0.5\n      ),\n      get_brand_color(\"dark-red-triadic-blue\")\n    )\n  )\n}\n\n\n\nCodedata |&gt;\n  drop_na(coverage_per) |&gt;\n  plotr:::plot_hist(\n    col = \"coverage_per\",\n    density_line_color = get_brand_color(\"red\"),\n    x_label = \"Coverage (%)\",\n    print = FALSE\n  ) +\n  labs(\n    title = \"SISVAN Coverage by Municipality (%)\",\n    subtitle = paste0(\"Year: \", year),\n    caption = \"Source: SISVAN\"\n  )\n\n\n\n\n\n\n\n\nCodedata |&gt;\n  drop_na(coverage_per, municipality_code) |&gt;\n  plotr:::plot_brazil_municipality(\n    col_fill = \"coverage_per\",\n    col_code = \"municipality_code\",\n    year = get_closest_geobr_year(year, type = \"municipality\"),\n    comparable_areas = FALSE,\n    breaks = seq(0, 100, 25),\n    limits = c(0, 100),\n    palette = brand_div_palette,\n    print = FALSE\n  ) +\n  labs(\n    title = \"SISVAN Coverage by Municipality (%)\",\n    subtitle = paste0(\"Year: \", year),\n    caption = \"Source: SISVAN\"\n  )\n#&gt; Scale on map varies by more than 10%, scale bar may be inaccurate\n\n\n\n\n\n\n\n\nCode# echo: false\n\ngc()\n#&gt;            used  (Mb) gc trigger   (Mb)  max used   (Mb)\n#&gt; Ncells  2407800 128.6   19327511 1032.3  30199235 1612.9\n#&gt; Vcells 17590415 134.3  251093711 1915.7 313867032 2394.7"
  },
  {
    "objectID": "index.html#how-to-cite",
    "href": "index.html#how-to-cite",
    "title": "",
    "section": "How to Cite",
    "text": "How to Cite\nTo cite this work, please use the following format:\nVartanian, D., Schettino, J. P. J., & Carvalho, A. M. (2025). A reproducible pipeline for processing SISVAN microdata on nutritional status monitoring in Brazil (2008-2023) [Computer software]. Sustentarea Research and Extension Group at the University of São Paulo. https://sustentarea.github.io/sisvan-nutritional-status\nA BibTeX entry for LaTeX users is\n@misc{vartanian2025,\n  title = {A reproducible pipeline for processing SISVAN microdata on nutritional status monitoring in Brazil (2008-2023)},\n  author = {{Daniel Vartanian} and {João Pedro Junqueira Schettino} and {Aline Martins de Carvalho}},\n  year = {2025},\n  address = {São Paulo},\n  institution = {Sustentarea Research and Extension Group at the University of São Paulo},\n  langid = {en},\n  url = {https://sustentarea.github.io/sisvan-nutritional-status}\n}"
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "",
    "section": "License",
    "text": "License\n\n \n\nThe code in this report is licensed under the GNU General Public License Version 3, while the report is available under the Creative Commons Attribution 4.0 International License.\nCopyright (C) 2025 Daniel Vartanian\n\nThe code in this report is free software: you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your option)\nany later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program. If not, see &lt;https://www.gnu.org/licenses/&gt;."
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "",
    "section": "Acknowledgments",
    "text": "Acknowledgments\n\nThis work is part of the Sustentarea Research and Extension Group project: Global syndemic: The impact of anthropogenic climate change on the health and nutrition of children under five years old attended by Brazil’s public health system (SUS).\n\nThis work was supported by the Conselho Nacional de Desenvolvimento Científico e Tecnológico - Brazil (CNPq)."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "",
    "section": "References",
    "text": "References\n\n\nAllaire, J. J., Teague, C., Xie, Y., & Dervieux, C. (n.d.). Quarto [Computer software]. Zenodo. https://doi.org/10.5281/ZENODO.5960048\n\n\nBagni, U. V., & Barros, D. C. D. (2015). Erro em antropometria aplicada à avaliação nutricional nos serviços de saúde: Causas, consequências e métodos de mensuração. Nutrire, 40(2), 226–236. https://doi.org/10.4322/2316-7874.18613\n\n\nBopp, M., & Faeh, D. (2008). End-digits preference for self-reported height depends on language. BMC Public Health, 8(1), 342. https://doi.org/10.1186/1471-2458-8-342\n\n\nComitê de Gestão de Indicadores, Rede Interagencial de Informações para a Saúde, Coordenação-Geral de Informações e Análises Epidemiológicas, Secretaria de Vigilância em Saúde e Ambiente, Ministério da Saúde, & Instituto Brasileiro de Geografia e Estatística. (n.d.). População residente – Estudo de estimativas populacionais por município, idade e sexo 2000-2024 – Brasil [Resident population – Study of population estimates by municipality, age, and sex, 2000–2024 – Brazil] [Data set]. DATASUS - Tabnet. Retrieved November 16, 2023, from http://tabnet.datasus.gov.br/cgi/deftohtm.exe?ibge/cnv/popsvs2024br.def\n\n\nCorsi, D. J., Perkins, J. M., & Subramanian, S. V. (2017). Child anthropometry data quality from Demographic and Health Surveys, Multiple Indicator Cluster Surveys, and National Nutrition Surveys in the West Central Africa region: Are we comparing apples and oranges? Global Health Action, 10(1), 1328185. https://doi.org/10.1080/16549716.2017.1328185\n\n\nFinaret, A. B., & Hutchinson, M. (2018). Missingness of height data from the demographic and health surveys in Africa between 1991 and 2016 was not random but is unlikely to have major implications for biases in estimating stunting prevalence or the determinants of child height. The Journal of Nutrition, 148(5), 781–789. https://doi.org/10.1093/jn/nxy037\n\n\nLawman, H. G., Ogden, C. L., Hassink, S., Mallya, G., Vander Veur, S., & Foster, G. D. (2015). Comparing methods for identifying biologically implausible values in height, weight, and body mass index among youth. American Journal of Epidemiology, 182(4), 359–365. https://doi.org/10.1093/aje/kwv057\n\n\nLyons-Amos, M., & Stones, T. (2017). Trends in demographic and health survey data quality: An analysis of age heaping over time in 34 countries in sub saharan Africa between 1987 and 2015. BMC Research Notes, 10(1), 760. https://doi.org/10.1186/s13104-017-3091-x\n\n\nMei, Z. (2007). Standard deviation of anthropometric Z-scores as a data quality assessment tool using the 2006 WHO growth standards: A cross country analysis. Bulletin of the World Health Organization, 85(6), 441–448. https://doi.org/10.2471/BLT.06.034421\n\n\nMourão, E., Gallo, C. D. O., Nascimento, F. A. D., & Jaime, P. C. (2020). Tendência temporal da cobertura do Sistema de Vigilância Alimentar e Nutricional entre crianças menores de 5 anos da região Norte do Brasil, 2008-2017*. Epidemiologia e Serviços de Saúde, 29(2). https://doi.org/10.5123/S1679-49742020000200026\n\n\nNannan, N., Dorrington, R., & Bradshaw, D. (2019). Estimating completeness of birth registration in South Africa, 1996 – 2011. Bulletin of the World Health Organization, 97(7), 468–476. https://doi.org/10.2471/BLT.18.222620\n\n\nNascimento, F. A. D., Silva, S. A. D., & Jaime, P. C. (2017). Cobertura da avaliação do estado nutricional no Sistema de Vigilância Alimentar e Nutricional brasileiro: 2008 a 2013. Cadernos de Saúde Pública, 33(12). https://doi.org/10.1590/0102-311x00161516\n\n\nPereira, R. H. M., & Goncalves, C. N. (n.d.). geobr: Download official spatial data sets of Brazil [Computer software]. https://doi.org/10.32614/CRAN.package.geobr\n\n\nPerumal, N., Namaste, S., Qamar, H., Aimone, A., Bassani, D. G., & Roth, D. E. (2020). Anthropometric data quality assessment in multisurvey studies of child growth. The American Journal of Clinical Nutrition, 112, 806S–815S. https://doi.org/10.1093/ajcn/nqaa162\n\n\nR Core Team. (n.d.). R: A language and environment for statistical computing [Computer software]. R Foundation for Statistical Computing. https://www.R-project.org\n\n\nSilva, N. de J., Silva, J. F. de M. e, Carrilho, T. R. B., Pinto, E. de J., Andrade, R. da C. S. de, Silva, S. A., Pedroso, J., Spaniol, A. M., Bortolini, G. A., Fagundes, A., Nilson, E. A. F., Fiaccone, R. L., Kac, G., Barreto, M. L., & Ribeiro-Silva, R. de C. (2023). Qualidade dos dados antropométricos infantis do Sisvan, Brasil, 2008-2017. Revista de Saúde Pública, 57(1, 1), 62–62. https://doi.org/10.11606/s1518-8787.2023057004655\n\n\nSistema de Vigilância Alimentar e Nutricional, Coordenação-Geral de Alimentação e Nutrição, Departamento de Promoção da Saúde, Coordenação Setorial de Tecnologia da Informação, Secretaria de Atenção Primária à Saúde, & Ministério da Saúde. (n.d.). Microdados dos acompanhamentos de estado nutricional [Microdata on nutritional status monitoring] [Data set]. openDataSUS. Retrieved November 16, 2023, from https://opendatasus.saude.gov.br/dataset/sisvan-estado-nutricional\n\n\nVartanian, D. (n.d.). {orbis}: Spatial data analysis tools [Computer software]. https://danielvartan.github.io/orbis/\n\n\nVartanian, D., & Carvalho, A. M. de. (2025). A reproducible pipeline for processing DATASUS annual population estimates by municipality, age, and sex in Brazil (2000-2024). Sustentarea Research and Extension Group at the University of São Paulo. https://sustentarea.github.io/datasus-pop-estimates\n\n\nWickham, H. (2023). The tidy tools manifesto. Tidyverse. https://tidyverse.tidyverse.org/articles/manifesto.html\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science: Import, tidy, transform, visualize, and model data (2nd ed.). O’Reilly Media. https://r4ds.hadley.nz"
  }
]